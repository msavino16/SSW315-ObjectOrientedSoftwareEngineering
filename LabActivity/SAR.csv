add,
chang,
cleaned out,
cleanup,
cleaningup,
cleaned up,
cleanning up,
cleans up,
clean-up,
creat,
decompos,
encapsulat,
enhanc,
extend,
extract,
factored out,
factoring out,
fix,
improv,
inlin,
introduc,
merg,
migrat,
modif,
modulariz,
restructur,
mov,
organiz,
polish,
pulling up,
pulled up,
pullup,
push down,
pushdown,
repackag,
re packag,
re-packag,
redesign,
re-design,
reduc,
refactor,
refin,
reformat,
remov,
renam,
reorder,
reorganiz,
re-organiz,
replac,
rework,
rewrit,
re-writ,
rewrot,
simplif,
split,
tidyup,
tidying-up,
tidied-up,
a bit of refactor,
basic code clean up,
changed code style,
changing code style,
changes code style,
change code style,
ease maintenance moving forward,
replace it with,
big refactor,
big cleanup,
cleaning up the code style,
cleaned up the code style,
clean up the code style,
cleans up the code style,
ease of code maintenance,
extracted out code,
better factored out,
cleanliness,
code style improv,
easier to maintain,
reduced code dependenc,
code refactor,
cleaning up unnecessary change,
cleaned up unnecessary change,
clean up unnecessary change,
cleans up unnecessary change,
code style unification,
simplify future maintenance,
pushed down dependenc,
code has been refactored extensively,
cleanup formatting,
fix code style,
improve quality,
simplify the code,
simplify code,
extensive refactoring,
code clean,
improving code style,
improved code style,
improves code style,
improve code style,
improvement of code quality,
less code,
refactoring towards nicer name analysis,
code cleanup,
minor adjustments to code style,
improved style and code quality,
changing package,
changed package,
change package,
changes package,
heavily refactored code,
code cleanliness,
modications to code style,
maintain quality,
cosmetic change,
heavy refactor,
code clean up,
lots of modifications to code style,
more quality cleanup,
full customization,
little refactor,
massive cleanup,
makes the code easier to program,
better name,
structure change,
lot of refactor,
minor cleaning of the code,
code review,
changing name,
changed name,
changes name,
module structure change,
major refactor,
housekeeping,
code rewrit,
changing the name,
changes the name,
change the name,
changed the name,
module organization structure change,
massive refactor,
major rewrite and simplification,
code cosmetic,
changing the package name,
changed the package name,
change the package name,
changes the package name,
polishing code,
huge refactor,
improving consistency,
improved consistency,
improves consistency,
improve consistency,
code revision,
changing method name,
changed method name,
changes method name,
improving code quality,
improved code quality,
improve code quality,
improves code quality,
minor refactor,
some fixing and optimization,
some fixes and optimization,
code optimization,
changed method parameter names for consistency,
changing method parameter names for consistency,
changes method parameter names for consistency,
change method parameter names for consistency,
changed package structure,
change package structure,
changing package structure,
changes package structure,
more refactor,
minors fixes and tweak,
minors fix and tweak,
minors fixing and tweak,
minor fixes and tweak,
minor fix and tweak,
minor fixing and tweak,
code reformatting,
enables condensed naming,
fix quality flaws,
refactored code,
refactoring code,
refactor code,
fixing annoying typo,
fixed annoying typo,
fix annoying typo,
fixes annoying typo,
code organization,
fix naming convention,
fixes naming convention,
fixing naming convention,
fixed naming convention,
get rid of,
refactoring existing schema,
refactored existing schema,
refactor existing schema,
refactors existing schema,
fix some formatting,
fixed some formatting,
fixing some formatting,
fixes some formatting,
code rearrangement,
fix naming,
fixed naming,
fixing naming,
changes design,
changing design,
changed design,
change design,
refactor out,
fixing formatting,
fix formatting,
fixed formatting,
fixes formatting,
code formatting,
typo in method name,
improving naming consistency,
improved naming consistency,
improves naming consistency,
improve naming consistency,
small refactor,
modification to make it work better,
modifications to make it work better,
code polishing,
maintain convention,
removing unused class,
removed unused class,
removes unused class,
remove unused class,
some refactor,
make it simpler to extend,
makes it simpler to extend,
making it simpler to extend,
made it simpler to extend,
code simplification,
maintain naming consistency,
minor simplification,
tactical refactor,
fixing regression,
fixes regression,
fixed regression,
fix regression,
code adjustment,
major rename,
major renaming,
fixing quality issue,
fix quality issue,
fixed quality issue,
fixes quality issue,
moved a lot of stuff,
removed the useless,
removing the useless,
removes the useless,
remove the useless,
code improvement,
name cleanup,
naming improvement,
fix the tidily,
removing unneeded variables,
removed unneeded variables,
remove unneeded variables,
removes unneeded variables,
code style,
renaming for consistency,
rename for consistency,
renames for consistency,
renamed for consistency,
package improvement,
further tidying,
remove unneeded code,
removes unneeded code,
removed unneeded code,
removing unneeded code,
code restructur,
renaming according to java naming convension,
rename according to java naming convension,
renamed according to java naming convension,
renames according to java naming convension,
structural chang,
tidied up and tweaked,
removing redundant,
removed redundant,
removes redundant,
remove redundant,
code beautifying,
renaming classes for consistency,
rename classes for consistency,
renamed classes for consistency,
rename classes for consistency,
hierarchy clean,
tidied up some code,
removing dependency,
removed dependency,
remove dependency,
removes dependency,
code tidying,
renaming package,
rename package,
renames package,
renamed package,
hierarchy reduction,
restructuring package,
restructrued package,
restructure package,
removing unused dependencies,
removed unused dependencies,
removes unused dependencies,
remove unused dependencies,
code enhancement,
resolve naming inconsistency,
resolving naming inconsistency,
resolved naming inconsistency,
resolves naming inconsistency,
enhancing architecture,
enhanced architecture,
enhance architecture,
enhances architecture,
restructuring code,
restructured code,
restructures code,
restructure code,
removing unused,
remove unused,
removed unused,
removes unused,
code reshuffling,
simpler nam,
architecture enhanc,
aggregating code,
aggregated code,
aggregate code,
aggregates code,
removing unnessary else blocks,
code modification,
using appropriate variable name,
used appropriate variable name,
use appropriate variable name,
uses appropriate variable name,
trim unneeded code,
beautifying code,
beautify code,
removed needless loop,
remove needless loop,
removing needless loop,
removes needless loop,
code unification,
using more consistent variable name,
use more consistent variable name,
used more consistent variable name,
uses more consistent variable name,
removing unneeded code,
remove unneeded code,
removes unneeded code,
removed unneeded code,
tidy code,
maintain consistency,
code quality,
neaten up,
more consistent formatting,
beautify,
customiz,
customis,
make code clearer,
moved more code out of,
moving more code out of,
moves more code out of,
move more code out of,
more easily extended,
moved all integration code to separate package,
moving all integration code to separate package,
move all integration code to separate package,
moves all integration code to separate package,
improve code clarity,
code clarity,
fix bad merg,
makes it more extensible-friendly,
make it more extensible-friendly,
making it more extensible-friendly,
made it more extensible-friendly,
improving code,
improves code,
improved code,
simplify code,
cleaning code,
clean code,
cleaned code,
cleans code,
cleanup code,
cleaning up code,
cleaned up code,
clean up code,
removed poor code practice,
removing poor code practice,
remove poor code practice,
removes poor code practice,
pull some code up,
pulling some code up,
pulled some code up,
pulls some code up,
making maintenance easier,
make maintenance easier,
makes maintenance easier,
reorganize project structure,
reorganizing project structure,
reorganized project structure,
reorganizes project structure,
code maintenance for refactoring,
remove redundant code,
removing redundant code,
removes redundant code,
removed redundant code,
moved and gave clearer names to,
refactor bad designed code,
getting code out of,
deleting a lot of old stuff,
fix technical debt,
antipattern bad for performance,
major structural chang,
minor structural chang,
clean up unnecessary code,
code reformatting and reordering,
nicer code,
nicer formatted,
nicer structur,
simplifying code redundanc,
simplify code redundanc,
simplifyed code redundanc,
added more checks for quality factors,
naming improvement,
renamed for consistency,
renaming for consistency,
rename for consistency,
renames for consistency,
refactoring towards nicer name analysis,
changing design,
change design,
changes design,
changed design,
modularize the code,
modularized the code,
modularizing the code,
code cosmetic,
moved more code out of,
moving more code out of,
move more code out of,
removing dependenc,
remove dependenc,
removed dependenc,
removes dependenc,
enhancing code beauty,
enhanced code beauty,
enhance code beauty,
enhances code beauty,
simplify internal design,
simplifying internal design,
changing package structure,
change package structure,
changes package structure,
changed package structure,
uses a safer method,
using a safer method,
used a safer method,
use a safer method,
fixing naming convention,
fix naming convention,
fixed naming convention,
fixes module structure,
fix module structure,
fixing module structure,
fixed module structure,
fixing a design flaw,
fix a design flaw,
fixed a design flaw,
fixes a design flaw,
fix code smell,
fixed code smell,
fixing code smell,
fixes code smell,
more easily extended,
moving unused file away,
moved unused file away,
moves unused file away,
move unused file away,
many cosmetic changes,
inlined unnecessary class,
inline unnecessary class,
inlining unnecessary class,
code cleansing,
major fixes and tweak,
major fix and tweak,
major fixing and tweak,0
clean,0
inheritance,0
abstraction,
complexity,
composition,
coupling,
encapsulation,
size,
polymorphism,
cohesion,
messaging,
concern separation,
separation of concern,
dependenc,
performance,
compatib,
readab,
stability,
usab,
flexib,
extensib,
effecien,
accuracy,
accessib,
robustness,
testab,
correctness,
scalab,
configurab,
simplicity,
reusab,
reliab,
modularity,
maintainab,
traceab,
interoperab,
fault-tolerance,
repeatab,
understandab,
effectivesness,
productivity,
modifiab,
reproducib,
adaptab,
manageab,
easy to read,
easy to understand,
easy to maintain,
easy to reuse,
duplica,
dead code,
data class,
long method,
switch statement,
lazy class,
too many parameter,
primitive obsession,
feature envy,
blob class,
blob operation,
redundancy,
useless class,
code style,
antipattern,
design flaw,
code smell,
temporary field,
old comment,
Large class,
Long Parameter List,
Data Clumps,
Refused Bequest,
Divergent change,
Shotgan Surgery,
Speculative Generality,
Message Chain,
Inapproperiate intimacy,
Middle Man,
Incomplete library class,
technical debt,
complex class,
codesmell,
